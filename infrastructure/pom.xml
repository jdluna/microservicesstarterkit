<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>l.nguyen.infrastructure</groupId>
    <artifactId>infrastructure</artifactId>
    <version>1.0-SNAPSHOT</version>
    <packaging>pom</packaging>
    <name>infrastructure</name>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <java.version>1.8</java.version>

        <infrastructure.version>1.0-SNAPSHOT</infrastructure.version>

        <!--Spring-->
        <spring.version>4.3.11.RELEASE</spring.version>
        <spring-boot.version>1.5.8.RELEASE</spring-boot.version>
        <!--Some improvements such as: https://github.com/spring-cloud/spring-cloud-netflix/issues/2303-->
        <spring-cloud.version>Edgware.RC1</spring-cloud.version>
        <spring-security.version>4.2.3.RELEASE</spring-security.version>
        <spring-oauth2.version>2.1.1.RELEASE</spring-oauth2.version>
        <spring-data.version>1.11.6.RELEASE</spring-data.version>
        <spring-batch.version>3.0.8.RELEASE</spring-batch.version>

        <!--Web-->
        <servlet.version>3.1.0</servlet.version>

        <!--Platforms-->
        <vertx.version>3.4.2</vertx.version>
        <docker.image.prefix>lnguyen</docker.image.prefix>
        <feign-okhttp.version>9.5.1</feign-okhttp.version>

        <!--Database-->
        <hibernate.version>5.2.10.Final</hibernate.version>
        <hibernate-validator.version>6.0.2.Final</hibernate-validator.version>
        <geronimo-jta.version>1.1.1</geronimo-jta.version>

        <!--Logging-->
        <slf4j.version>1.7.5</slf4j.version>
        <logback.version>1.2.3</logback.version>

        <!--Utilities-->
        <apache-common-config.version>1.10</apache-common-config.version>
        <commons-lang.version>2.6</commons-lang.version>
        <commons-lang3.version>3.6</commons-lang3.version>
        <commons-io.version>2.5</commons-io.version>
        <joda-time.version>2.9.9</joda-time.version>
        <gson.version>2.8.2</gson.version>
        <aspectj.version>1.8.12</aspectj.version>
        <jjwt.version>0.9.0</jjwt.version>

        <!--JUnit-->
        <junit.version>4.12</junit.version>
    </properties>

    <modules>
		<module>core-libs</module>
        <module>config-server</module>
        <module>service-registry</module>
        <module>api-gateway</module>
        <module>auth-server</module>
    </modules>

    <repositories>
        <repository>
            <id>repository.spring.release</id>
            <name>Spring GA Repository</name>
            <url>http://repo.spring.io/release</url>
        </repository>

        <repository>
            <id>repository.spring.milestone</id>
            <name>Spring Milestone Repository</name>
            <url>http://repo.spring.io/milestone</url>
        </repository>
    </repositories>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>${spring-boot.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>${spring-cloud.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <!--Set global dependencies-->
    <dependencies>
        <dependency>
            <groupId>org.aspectj</groupId>
            <artifactId>aspectjweaver</artifactId>
            <version>${aspectj.version}</version>
        </dependency>

        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context</artifactId>
            <version>${spring.version}</version>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-autoconfigure</artifactId>
        </dependency>

        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>${slf4j.version}</version>
        </dependency>

        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <version>${logback.version}</version>
        </dependency>

        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-access</artifactId>
            <version>${logback.version}</version>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <!--Setup plugins for global (sub-modules)-->
    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-maven-plugin</artifactId>
                    <version>${spring-boot.version}</version>
                </plugin>
            </plugins>
        </pluginManagement>

        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <!--<version>3.2</version>-->
                <configuration> <!-- Compile java 8 compatible bytecode -->
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                </configuration>
            </plugin>

            <!-- Plugin to run unit tests -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <executions>
                    <execution>
                        <phase>test</phase>
                        <id>default-test</id>
                        <configuration>
                            <includes>
                                <include>*Test.java</include>
                            </includes>
                            <reportsDirectory>${project.build.directory}/test-reports/unit</reportsDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>prepare-agent</id>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                    </execution>

                    <execution>
                        <id>report</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                    </execution>

                    <execution>
                        <id>post-unit-tests</id>
                        <phase>test</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                        <configuration>
                            <!--Path to execution data-->
                            <dataFile>target/jacoco.exec</dataFile>
                            <outputDirectory>target/jacoco-reports</outputDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>
